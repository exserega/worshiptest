// ====================================
// FIREBASE INITIALIZATION v8
// –ï–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
// ====================================

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase
const firebaseConfig = {
    apiKey: "AIzaSyBlkjVQFtFpMRFexAi6nBqEkIfjFlU5cDo",
    authDomain: "song-archive-389a6.firebaseapp.com",
    projectId: "song-archive-389a6",
    storageBucket: "song-archive-389a6.appspot.com",
    messagingSenderId: "619735277668",
    appId: "1:619735277668:web:51d2684bd8d4444eaf3f71",
    measurementId: "G-Z6QYH5YD2E"
};

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ Firebase
if (!window.firebase) {
    console.error('Firebase SDK –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç—ã Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –≤ HTML.');
} else if (!window.firebase.apps.length) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firebase —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    window.firebase.initializeApp(firebaseConfig);
    console.log('‚úÖ Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
} else {
    console.log('‚úÖ Firebase —É–∂–µ –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
}

// –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
const firebase = window.firebase;
const auth = firebase?.auth?.();
const db = firebase?.firestore?.();
const storage = firebase?.storage?.();

// –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
window.firebaseAuth = auth;
window.firebaseDb = db;
window.firebaseStorage = storage;

// –í–∫–ª—é—á–∞–µ–º –æ—Ñ–ª–∞–π–Ω-–ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å Firestore (—á—Ç–µ–Ω–∏–µ —Ä–∞–Ω–µ–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Ñ–ª–∞–π–Ω)
// –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ Safari –Ω–∞ iOS
const isIOSSafari = /iPhone|iPad|iPod/.test(navigator.userAgent) && 
                   /Safari/.test(navigator.userAgent) && 
                   !/Chrome|CriOS|FxiOS/.test(navigator.userAgent);

if (isIOSSafari) {
    console.log('üì± iOS Safari detected - skipping Firestore persistence to prevent blocking');
    // –ù–ï –≤–∫–ª—é—á–∞–µ–º persistence –¥–ª—è iOS Safari –∏–∑-–∑–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
} else {
    // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤ –≤–∫–ª—é—á–∞–µ–º persistence
    try {
        if (firebase?.firestore) {
            firebase.firestore().enablePersistence({ synchronizeTabs: true })
                .then(() => {
                    console.log('‚úÖ Firestore persistence enabled with tab sync');
                })
                .catch((error) => {
                    console.warn('‚ö†Ô∏è Firestore persistence not enabled:', error?.code || error?.message || error);
                });
        }
    } catch (e) {
        console.warn('‚ö†Ô∏è Firestore persistence setup failed:', e);
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –º–æ–¥—É–ª–µ–π
export { firebase, auth, db, storage, firebaseConfig };

// ================================
// Global alert shim ‚Üí dark toast
// ================================
try {
    (async () => {
        const url = new URL(window.location.href);
        const nativeAlertOnly = url.searchParams.get('nativeAlert') === '1';
        if (nativeAlertOnly) return;
        if (!window._nativeAlert) window._nativeAlert = window.alert.bind(window);
        const { showToast } = await import('/src/ui/notifications.js');
        window.alert = function(message) {
            try { showToast(String(message || ''), 'warning', 3000); } catch (e) { window._nativeAlert(String(message || '')); }
        };
        console.log('‚úÖ Alert shim enabled (toast)');
    })();
} catch (e) {
    console.warn('‚ö†Ô∏è Alert shim failed, using native alert', e);
}