/**
 * –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è overlay –≤—ã–±–æ—Ä–∞ —Å–µ—Ç-–ª–∏—Å—Ç–∞
 */

import { loadSetlists, createSetlist, addSongToSetlist } from '../api/index.js';

console.log('üìã [SetlistSelector] Module loading...');

class SetlistSelector {
    constructor() {
        // DOM —ç–ª–µ–º–µ–Ω—Ç—ã
        this.overlay = document.getElementById('setlist-select-overlay');
        this.songNameDisplay = document.getElementById('adding-song-name');
        this.dropdown = document.getElementById('setlist-select-dropdown');
        this.newNameInput = document.getElementById('new-setlist-name-modal');
        this.confirmButton = document.getElementById('confirm-add-to-setlist');
        this.cancelButton = document.getElementById('cancel-setlist-select');
        this.closeButton = document.getElementById('close-setlist-select');
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ
        this.currentSong = null;
        this.setlists = [];
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        this.init();
    }
    
    init() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        this.confirmButton?.addEventListener('click', () => this.handleConfirm());
        this.cancelButton?.addEventListener('click', () => this.close());
        this.closeButton?.addEventListener('click', () => this.close());
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω
        this.overlay?.addEventListener('click', (e) => {
            if (e.target === this.overlay) {
                this.close();
            }
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && this.overlay?.classList.contains('visible')) {
                this.close();
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        this.dropdown?.addEventListener('change', () => this.updateConfirmButton());
        this.newNameInput?.addEventListener('input', () => this.updateConfirmButton());
        
        // Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        this.newNameInput?.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' && !this.confirmButton.disabled) {
                this.handleConfirm();
            }
        });
    }
    
    /**
     * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç overlay –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ç-–ª–∏—Å—Ç–∞
     * @param {Object} song - –û–±—ä–µ–∫—Ç –ø–µ—Å–Ω–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
     */
    async open(song) {
        if (!song) {
            console.error('No song provided to SetlistSelector');
            return;
        }
        
        this.currentSong = song;
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏
        if (this.songNameDisplay) {
            this.songNameDisplay.textContent = song.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        if (this.newNameInput) {
            this.newNameInput.value = '';
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º overlay
        this.overlay?.classList.add('visible');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–µ—Ç-–ª–∏—Å—Ç—ã
        await this.loadSetlists();
        
        // –§–æ–∫—É—Å –Ω–∞ dropdown
        this.dropdown?.focus();
    }
    
    /**
     * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç overlay
     */
    close() {
        this.overlay?.classList.remove('visible');
        this.currentSong = null;
        
        // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
        if (this.newNameInput) {
            this.newNameInput.value = '';
        }
        if (this.dropdown) {
            this.dropdown.value = '';
        }
        this.updateConfirmButton();
    }
    
    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–µ—Ç-–ª–∏—Å—Ç–æ–≤
     */
    async loadSetlists() {
        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
            if (this.dropdown) {
                this.dropdown.innerHTML = '<option value="">–ó–∞–≥—Ä—É–∑–∫–∞...</option>';
                this.dropdown.disabled = true;
            }
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–µ—Ç-–ª–∏—Å—Ç—ã
            this.setlists = await loadSetlists();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º dropdown
            if (this.dropdown) {
                this.dropdown.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç-–ª–∏—Å—Ç</option>';
                
                this.setlists.forEach(setlist => {
                    const option = document.createElement('option');
                    option.value = setlist.id;
                    option.textContent = setlist.name;
                    this.dropdown.appendChild(option);
                });
                
                this.dropdown.disabled = false;
            }
            
        } catch (error) {
            console.error('Error loading setlists:', error);
            if (this.dropdown) {
                this.dropdown.innerHTML = '<option value="">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</option>';
            }
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
     */
    updateConfirmButton() {
        if (!this.confirmButton) return;
        
        const hasSelectedSetlist = this.dropdown?.value;
        const hasNewName = this.newNameInput?.value.trim();
        
        this.confirmButton.disabled = !hasSelectedSetlist && !hasNewName;
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
     */
    async handleConfirm() {
        if (!this.currentSong) return;
        
        try {
            // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
            if (this.confirmButton) {
                this.confirmButton.disabled = true;
                this.confirmButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –î–æ–±–∞–≤–ª–µ–Ω–∏–µ...';
            }
            
            let setlistId = this.dropdown?.value;
            
            // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å–µ—Ç-–ª–∏—Å—Ç
            if (!setlistId && this.newNameInput?.value.trim()) {
                const newName = this.newNameInput.value.trim();
                console.log('Creating new setlist:', newName);
                
                setlistId = await createSetlist(newName);
                console.log('Created setlist with ID:', setlistId);
            }
            
            if (!setlistId) {
                throw new Error('No setlist selected or created');
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Å–Ω—é –≤ —Å–µ—Ç-–ª–∏—Å—Ç
            await addSongToSetlist(setlistId, this.currentSong);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            this.showNotification('‚úÖ –ü–µ—Å–Ω—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–µ—Ç-–ª–∏—Å—Ç!', 'success');
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º overlay
            this.close();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI –µ—Å–ª–∏ –ø–∞–Ω–µ–ª—å —Å–µ—Ç-–ª–∏—Å—Ç–æ–≤ –æ—Ç–∫—Ä—ã—Ç–∞
            const setlistsPanel = document.getElementById('setlists-panel');
            if (setlistsPanel?.classList.contains('open')) {
                // –¢—Ä–∏–≥–≥–µ—Ä–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏–µ
                window.dispatchEvent(new CustomEvent('setlist-updated', { 
                    detail: { setlistId } 
                }));
            }
            
        } catch (error) {
            console.error('Error adding song to setlist:', error);
            this.showNotification('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–µ—Å–Ω–∏', 'error');
        } finally {
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            if (this.confirmButton) {
                this.confirmButton.innerHTML = '<i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å';
                this.updateConfirmButton();
            }
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     */
    showNotification(message, type = 'info') {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if (typeof window.showNotification === 'function') {
            window.showNotification(message, type);
            return;
        }
        
        // –ò–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ–π alert
        alert(message);
    }
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
const setlistSelector = new SetlistSelector();
console.log('üìã [SetlistSelector] Instance created');

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç–∏—è
export function openSetlistSelector(song) {
    console.log('üìã [SetlistSelector] openSetlistSelector called with song:', song?.name);
    return setlistSelector.open(song);
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.openSetlistSelector = openSetlistSelector;
console.log('üìã [SetlistSelector] Module initialized, window.openSetlistSelector =', typeof window.openSetlistSelector);