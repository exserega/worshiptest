/**
 * Agape Worship App - Overlay Management Module
 * –ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–≤–µ—Ä–ª–µ—è–º–∏ –∏ –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏
 */

import { 
    getSongKey,
    getTransposition, 
    transposeLyrics, 
    processLyrics, 
    highlightChords 
} from '../core/index.js';
import * as ui from '../../ui.js';
import * as core from '../../js/core.js';

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–≤–µ—Ä–ª–µ–µ–≤
let currentMobileSong = null;
let currentSongForKey = null;
let currentSelectedKey = 'C';

/**
 * –ü–æ–∫–∞–∑ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–µ–≤—å—é –ø–µ—Å–Ω–∏
 * @param {Object} song - –û–±—ä–µ–∫—Ç –ø–µ—Å–Ω–∏
 */
export function showMobileSongPreview(song) {
    console.log('üîç –ü–æ–∫–∞–∑ –º–æ–±–∏–ª—å–Ω–æ–≥–æ overlay –¥–ª—è –ø–µ—Å–Ω–∏:', song.name);
    
    currentMobileSong = song;
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
    const overlay = document.getElementById('mobile-song-preview-overlay');
    const titleElement = document.getElementById('mobile-song-title');
    const keySelector = document.getElementById('mobile-key-selector');
    const songTextElement = document.getElementById('mobile-song-text');
    
    if (!overlay || !titleElement || !keySelector || !songTextElement) {
        console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã –º–æ–±–∏–ª—å–Ω–æ–≥–æ overlay:');
        console.error('overlay:', overlay);
        console.error('titleElement:', titleElement);
        console.error('keySelector:', keySelector);
        console.error('songTextElement:', songTextElement);
        return;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
    titleElement.textContent = song.name;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    const originalKey = getSongKey(song);
    keySelector.value = originalKey;
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏
    displaySongTextInMobileOverlay(song, originalKey);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º overlay
    overlay.classList.add('show');
    document.body.classList.add('overlay-active');
    
    // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
    setupMobileOverlayEventListeners();
    
    console.log('‚úÖ –ú–æ–±–∏–ª—å–Ω—ã–π overlay –ø–æ–∫–∞–∑–∞–Ω');
}

/**
 * –°–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ overlay
 */
export function hideMobileSongPreview() {
    console.log('üîí –°–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ overlay');
    
    const overlay = document.getElementById('mobile-song-preview-overlay');
    if (overlay) {
        overlay.classList.remove('show');
        document.body.classList.remove('overlay-active');
    }
    
    currentMobileSong = null;
    
    console.log('‚úÖ –ú–æ–±–∏–ª—å–Ω—ã–π overlay —Å–∫—Ä—ã—Ç');
}

/**
 * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏ –≤ –º–æ–±–∏–ª—å–Ω–æ–º overlay
 * @param {Object} song - –û–±—ä–µ–∫—Ç –ø–µ—Å–Ω–∏
 * @param {string} selectedKey - –í—ã–±—Ä–∞–Ω–Ω–∞—è —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
 */
export function displaySongTextInMobileOverlay(song, selectedKey) {
    console.log('üìù displaySongTextInMobileOverlay called:', song.name, selectedKey);
    const songTextElement = document.getElementById('mobile-song-text');
    if (!songTextElement) {
        console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç mobile-song-text –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏
    let songText = song.hasWebEdits 
        ? (song['–¢–µ–∫—Å—Ç –∏ –∞–∫–∫–æ—Ä–¥—ã (edited)'] || song['–¢–µ–∫—Å—Ç –∏ –∞–∫–∫–æ—Ä–¥—ã'] || '') 
        : (song['–¢–µ–∫—Å—Ç –∏ –∞–∫–∫–æ—Ä–¥—ã'] || '');
    
    if (!songText) {
        songTextElement.innerHTML = '<div style="text-align: center; color: var(--label-color); font-style: italic;">–¢–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω</div>';
        return;
    }
    
    // –¢—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä—É–µ–º –∞–∫–∫–æ—Ä–¥—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    const originalKey = getSongKey(song);
    console.log(`üéµ –¢—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: ${originalKey} ‚Üí ${selectedKey}`);
    
    if (selectedKey !== originalKey) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é —Ñ—É–Ω–∫—Ü–∏—é —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –±–µ–º–æ–ª–µ–π
        const transposition = getTransposition(originalKey, selectedKey);
        songText = transposeLyrics(songText, transposition, selectedKey);
        console.log('‚úÖ –¢—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –±–µ–º–æ–ª–µ–π');
    } else {
        console.log('‚ö™ –¢—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º
    const processedLyrics = processLyrics(songText);
    songTextElement.innerHTML = processedLyrics;
    console.log('üìù –¢–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –≤ mobile overlay');
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ overlay
 */
export function setupMobileOverlayEventListeners() {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ overlay');
    
    // –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    const closeBtn = document.getElementById('close-mobile-song-preview');
    if (closeBtn) {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        closeBtn.replaceWith(closeBtn.cloneNode(true));
        const newCloseBtn = document.getElementById('close-mobile-song-preview');
        
        newCloseBtn.addEventListener('click', () => {
            console.log('‚ùå –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ overlay –Ω–∞–∂–∞—Ç–∞');
            hideMobileSongPreview();
        });
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ close-mobile-song-preview –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è (–±—É–¥–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –∏–∑ setlist-manager)
    const addBtn = document.getElementById('add-song-to-setlist-mobile');
    if (addBtn) {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        addBtn.replaceWith(addBtn.cloneNode(true));
        const newAddBtn = document.getElementById('add-song-to-setlist-mobile');
        
        newAddBtn.addEventListener('click', async () => {
            console.log('üéµ –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å" –Ω–∞–∂–∞—Ç–∞ –≤ –º–æ–±–∏–ª—å–Ω–æ–º overlay');
            if (currentMobileSong) {
                const selectedKey = document.getElementById('mobile-key-selector').value;
                console.log('üìù –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Å–Ω—é:', currentMobileSong.name, '–≤ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:', selectedKey);
                
                try {
                    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
                    const { addSongToSetlist } = await import('./setlist-manager.js');
                    await addSongToSetlist(currentMobileSong, selectedKey);
                    console.log('‚úÖ –ü–µ—Å–Ω—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
                    hideMobileSongPreview();
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–±—É–¥–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –∏–∑ modal-manager)
                    const { showNotification } = await import('./modal-manager.js');
                    showNotification('‚úÖ –ü–µ—Å–Ω—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–µ—Ç-–ª–∏—Å—Ç', 'success');
                } catch (error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Å–Ω–∏:', error);
                    const { showNotification } = await import('./modal-manager.js');
                    showNotification('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Å–Ω–∏', 'error');
                }
            }
        });
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω');
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ add-song-to-setlist-mobile –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    // –°–µ–ª–µ–∫—Ç–æ—Ä —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    const keySelector = document.getElementById('mobile-key-selector');
    if (keySelector) {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        keySelector.replaceWith(keySelector.cloneNode(true));
        const newKeySelector = document.getElementById('mobile-key-selector');
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        if (currentMobileSong) {
            const originalKey = getSongKey(currentMobileSong);
            newKeySelector.value = originalKey;
        }
        
        newKeySelector.addEventListener('change', (e) => {
            console.log('üéµ –°–º–µ–Ω–∞ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞:', e.target.value);
            if (currentMobileSong) {
                displaySongTextInMobileOverlay(currentMobileSong, e.target.value);
            }
        });
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω');
    } else {
        console.error('‚ùå –°–µ–ª–µ–∫—Ç–æ—Ä mobile-key-selector –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
}

/**
 * –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ –∫–ª—é—á–∞
 */
export function closeKeySelectionModal() {
    if (ui.keySelectionModal) {
        ui.keySelectionModal.classList.remove('show');
    }
    currentSongForKey = null;
    currentSelectedKey = 'C';
}

/**
 * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ –∫–ª—é—á–∞
 * @param {Object} song - –û–±—ä–µ–∫—Ç –ø–µ—Å–Ω–∏
 */
export function showKeySelectionModal(song) {
    console.log('=== showKeySelectionModal START ===');
    console.log('song:', song);
    
    if (!ui.keySelectionModal) {
        console.error('keySelectionModal not found!');
        return;
    }
    
    currentSongForKey = song;
    const originalSongKey = getSongKey(song);
    currentSelectedKey = originalSongKey;
    
    console.log('Set currentSongForKey:', currentSongForKey);
    console.log('Set currentSelectedKey:', currentSelectedKey);
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Å–Ω–µ
    if (ui.keySongName) {
        ui.keySongName.textContent = `–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –ø–µ—Å–Ω–∏ "${song.name}"`;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤ —Å–µ–ª–µ–∫—Ç–æ—Ä –∏ –±–µ–π–¥–∂
    const keySelector = document.getElementById('key-selector');
    const originalKeyBadge = document.getElementById('original-key-badge');
    
    if (keySelector) {
        keySelector.value = originalSongKey;
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
        keySelector.onchange = (e) => {
            currentSelectedKey = e.target.value;
            updateSongTextInModal(song, currentSelectedKey);
        };
    }
    
    if (originalKeyBadge) {
        originalKeyBadge.textContent = `–æ—Ä–∏–≥–∏–Ω–∞–ª: ${originalSongKey}`;
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏
    updateSongTextInModal(song, currentSelectedKey);
    
    // –î–û–ë–ê–í–õ–Ø–ï–ú –û–ë–†–ê–ë–û–¢–ß–ò–ö –°–û–ë–´–¢–ò–Ø –ü–†–Ø–ú–û –ó–î–ï–°–¨
    const confirmBtn = document.getElementById('confirm-key-selection');
    console.log('Found confirm button:', confirmBtn);
    
    if (confirmBtn) {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        const newConfirmBtn = confirmBtn.cloneNode(true);
        confirmBtn.parentNode.replaceChild(newConfirmBtn, confirmBtn);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        newConfirmBtn.addEventListener('click', async (e) => {
            console.log('=== CONFIRM BUTTON CLICKED IN MODAL ===');
            console.log('Event:', e);
            e.preventDefault();
            e.stopPropagation();
            
            // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
            const { confirmAddSongWithKey } = await import('./setlist-manager.js');
            confirmAddSongWithKey();
        });
        
        console.log('Event listener added to confirm button');
    } else {
        console.error('Confirm button not found!');
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    ui.keySelectionModal.classList.add('show');
    console.log('Modal shown with class "show"');
    console.log('=== showKeySelectionModal END ===');
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏ –≤ modal —Å —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 * @param {Object} song - –û–±—ä–µ–∫—Ç –ø–µ—Å–Ω–∏
 * @param {string} selectedKey - –í—ã–±—Ä–∞–Ω–Ω–∞—è —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
 */
export function updateSongTextInModal(song, selectedKey) {
    const songTextDisplay = document.getElementById('song-text-display');
    if (!songTextDisplay) return;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏
    let songText = song.hasWebEdits 
        ? (song['–¢–µ–∫—Å—Ç –∏ –∞–∫–∫–æ—Ä–¥—ã (edited)'] || song['–¢–µ–∫—Å—Ç –∏ –∞–∫–∫–æ—Ä–¥—ã'] || '') 
        : (song['–¢–µ–∫—Å—Ç –∏ –∞–∫–∫–æ—Ä–¥—ã'] || '');
    
    if (!songText) {
        songTextDisplay.innerHTML = `
            <div class="loading-text">
                <i class="fas fa-exclamation-triangle"></i>
                <p>–¢–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω</p>
            </div>
        `;
        return;
    }
    
    // –¢—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä—É–µ–º –∞–∫–∫–æ—Ä–¥—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    const originalKey = getSongKey(song);
    if (selectedKey !== originalKey) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —É–ª—É—á—à–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        const transposition = core.getTransposition(originalKey, selectedKey);
        songText = core.transposeLyrics(songText, transposition, selectedKey);
    }
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∞–∫–∫–æ—Ä–¥—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const formattedText = highlightChords(songText);
    
    songTextDisplay.innerHTML = formattedText;
    
    console.log(`üìù –¢–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –æ–±–Ω–æ–≤–ª–µ–Ω (${originalKey} ‚Üí ${selectedKey})`);
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
 */
export function updateKeyButtons() {
    const keyButtons = document.querySelectorAll('.key-btn');
    keyButtons.forEach(btn => {
        btn.classList.remove('selected');
        if (btn.dataset.key === currentSelectedKey) {
            btn.classList.add('selected');
        }
    });
}

// –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ–∫—É—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
export function getCurrentMobileSong() {
    return currentMobileSong;
}

export function getCurrentSongForKey() {
    return currentSongForKey;
}

export function getCurrentSelectedKey() {
    return currentSelectedKey;
}

export function setCurrentSelectedKey(key) {
    currentSelectedKey = key;
}

export const metadata = {
    name: 'OverlayManager',
    version: '1.0.0',
    description: '–ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–≤–µ—Ä–ª–µ—è–º–∏ –∏ –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏',
    functions: [
        'showMobileSongPreview',
        'hideMobileSongPreview', 
        'displaySongTextInMobileOverlay',
        'setupMobileOverlayEventListeners',
        'closeKeySelectionModal',
        'showKeySelectionModal',
        'updateSongTextInModal',
        'updateKeyButtons'
    ]
};