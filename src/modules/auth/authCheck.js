// ====================================
// üîê AUTH CHECK MODULE
// ====================================
// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
// ====================================

import logger from '../../utils/logger.js';

// Firebase references
const auth = window.firebase.auth();
const db = window.firebase.firestore();

// ====================================
// STATE
// ====================================

let currentUser = null;
let authCheckPromise = null;

// ====================================
// AUTH CHECK FUNCTION
// ====================================

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {Promise<{user: Object|null, isAuthenticated: boolean}>}
 */
export function checkAuth() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    if (!auth || !db) {
        console.error('Firebase not initialized');
        return Promise.resolve({ user: null, isAuthenticated: false });
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–º–∏—Å –µ—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–∂–µ –∏–¥–µ—Ç
    if (authCheckPromise) return authCheckPromise;
    
    authCheckPromise = new Promise((resolve) => {
        const unsubscribe = auth.onAuthStateChanged(async (firebaseUser) => {
            if (firebaseUser) {
                logger.log('üîê User authenticated:', firebaseUser.email || firebaseUser.phone || 'Anonymous');
                
                try {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º (–≥–æ—Å—Ç–µ–º)
                    if (firebaseUser.isAnonymous) {
                        logger.log('üë§ Anonymous guest user detected');
                        
                        // –î–ª—è –≥–æ—Å—Ç–µ–π –ù–ï —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ –ë–î
                        currentUser = {
                            uid: firebaseUser.uid,
                            email: null,
                            name: '–ì–æ—Å—Ç—å',
                            role: 'guest',
                            status: 'guest',
                            isAnonymous: true,
                            firebaseUser
                        };
                        
                        resolve({ user: currentUser, isAuthenticated: true });
                        return;
                    }
                    
                    // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ –ë–î
                    const db = firebase.firestore();
                    const userDoc = await db.collection('users').doc(firebaseUser.uid).get();
                        
                        if (userDoc.exists) {
                            currentUser = {
                                ...userDoc.data(),
                                uid: firebaseUser.uid,
                                firebaseUser
                            };
                            
                            console.log('üîê User authenticated:', currentUser.email || currentUser.phone);
                            
                            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                            if (currentUser.status === 'banned' || currentUser.status === 'blocked') {
                                console.warn('üö´ User is blocked');
                                await auth.signOut();
                                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                                if (typeof window !== 'undefined') {
                                    alert('–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
                                }
                                resolve({ user: null, isAuthenticated: false, isBanned: true });
                            } else if (currentUser.status === 'pending' && currentUser.hasRejection && !currentUser.rejectionShown) {
                                console.warn('‚ùå User request was rejected but status is pending');
                                const branchName = currentUser.branchName || '–≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∏–ª–∏–∞–ª';
                                const reason = currentUser.rejectionReason || '–ë–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã';
                                const message = `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–∫–ª–æ–Ω–∏–ª –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ ${branchName}.\n\n–ü—Ä–∏—á–∏–Ω–∞: ${reason}\n\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–∞–π—Ç–æ–º —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:\nTelegram: @Sha1oom`;
                                
                                if (typeof window !== 'undefined') {
                                    if (confirm(message + '\n\n–ù–∞–∂–º–∏—Ç–µ OK, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ Telegram')) {
                                        window.open('https://t.me/Sha1oom', '_blank');
                                    }
                                    
                                    // –û—Ç–º–µ—á–∞–µ–º —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ
                                    const db = firebase.firestore();
                                    db.collection('users').doc(firebaseUser.uid).update({
                                        rejectionShown: true
                                    }).catch(err => console.error('Error updating rejectionShown:', err));
                                }
                                resolve({ user: currentUser, isAuthenticated: true });
                            } else if (currentUser.status === 'active' && currentUser.approvedAt && !currentUser.approvalShown) {
                                console.log('‚úÖ User was recently approved');
                                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –æ–¥–∏–Ω —Ä–∞–∑
                                if (typeof window !== 'undefined') {
                                    const message = `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞.\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:\n‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —Å–µ—Ç-–ª–∏—Å—Ç—ã\n‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ç-–ª–∏—Å—Ç—ã\n‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å –ø–µ—Å–Ω–∏ –≤ —Å–µ—Ç-–ª–∏—Å—Ç—ã\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É!`;
                                    alert(message);
                                    
                                    // –û—Ç–º–µ—á–∞–µ–º —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ
                                    const db = firebase.firestore();
                                    db.collection('users').doc(firebaseUser.uid).update({
                                        approvalShown: true
                                    }).catch(err => console.error('Error updating approvalShown:', err));
                                }
                                resolve({ user: currentUser, isAuthenticated: true });
                            } else {
                                resolve({ user: currentUser, isAuthenticated: true });
                            }
                        } else {
                            console.warn('‚ö†Ô∏è User profile not found in Firestore, creating...');
                        
                        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
                        try {
                            const newUserData = {
                                id: firebaseUser.uid,
                                name: firebaseUser.displayName || '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                                email: firebaseUser.email,
                                phone: firebaseUser.phoneNumber,
                                photoURL: firebaseUser.photoURL,
                                role: 'user',
                                branchId: null,
                                status: 'pending',
                                createdAt: new Date(),
                                updatedAt: new Date()
                            };
                            
                            await db.collection('users').doc(firebaseUser.uid).set(newUserData);
                            console.log('‚úÖ User profile created');
                            
                            currentUser = {
                                ...newUserData,
                                uid: firebaseUser.uid,
                                firebaseUser
                            };
                            
                            resolve({ user: currentUser, isAuthenticated: true });
                        } catch (createError) {
                            console.error('‚ùå Failed to create user profile:', createError);
                            resolve({ user: null, isAuthenticated: false });
                        }
                    }
                } catch (error) {
                    console.error('Error fetching user profile:', error);
                    resolve({ user: null, isAuthenticated: false });
                }
            } else {
                console.log('üîí No authenticated user');
                resolve({ user: null, isAuthenticated: false });
            }
            
            unsubscribe();
        });
    });
    
    return authCheckPromise;
}

// ====================================
// ACCESS CONTROL
// ====================================

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç—É–ø –∫ —Ä–µ—Å—É—Ä—Å—É
 * @param {string} resource - –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞ (setlists, users, branches, songs)
 * @param {string} action - –î–µ–π—Å—Ç–≤–∏–µ (create, read, update, delete)
 * @returns {boolean}
 */
export function hasAccess(resource, action) {
    if (!currentUser) return false;
    
    // –ê–¥–º–∏–Ω—ã –∏–º–µ—é—Ç –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø
    if (currentUser.role === 'admin') return true;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const userPermissions = {
        setlists: ['read'],
        songs: ['read'],
        users: [],
        branches: []
    };
    
    return userPermissions[resource]?.includes(action) || false;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
 * @returns {boolean}
 */
export async function isAdmin() {
    const user = auth.currentUser;
    if (!user) return false;
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω —Å custom claims
        const idTokenResult = await user.getIdTokenResult();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º custom claims (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
        if (idTokenResult.claims.role === 'admin') {
            return true;
        }
        
        // Fallback –Ω–∞ Firestore (–µ—Å–ª–∏ claims –µ—â–µ –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã)
        return currentUser?.role === 'admin';
    } catch (error) {
        console.error('Error checking admin status:', error);
        return currentUser?.role === 'admin';
    }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫ —Ñ–∏–ª–∏–∞–ª—É
 * @param {string} branchId - ID —Ñ–∏–ª–∏–∞–ª–∞
 * @returns {boolean}
 */
export async function belongsToBranch(branchId) {
    if (!currentUser) return false;
    if (await isAdmin()) return true; // –ê–¥–º–∏–Ω—ã –≤–∏–¥—è—Ç –≤—Å–µ —Ñ–∏–ª–∏–∞–ª—ã
    return currentUser.branchId === branchId;
}

// ====================================
// USER GETTERS
// ====================================

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {Object|null}
 */
export function getCurrentUser() {
    return currentUser;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å ID —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∏–ª–∏–∞–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {string|null}
 */
export function getCurrentBranchId() {
    return currentUser?.branchId || null;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å—Ç–∞—Ç—É—Å–µ pending
 * @returns {boolean}
 */
export function isUserPending() {
    return currentUser?.status === 'pending';
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ—Å—Ç–µ–º
 * @returns {boolean}
 */
export function isUserGuest() {
    return currentUser?.isAnonymous === true || currentUser?.status === 'guest';
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø (pending –∏–ª–∏ guest)
 * @returns {boolean}
 */
export function hasLimitedAccess() {
    return currentUser?.status === 'pending' || currentUser?.status === 'guest';
}


/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {string|null}
 */
export function getUserStatus() {
    return currentUser?.status || null;
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è pending –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * @param {string} action - –ù–∞–∑–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç-–ª–∏—Å—Ç–æ–≤")
 */
export function showPendingUserMessage(action) {
    const message = `${action} –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.\n\n–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.\n\n–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:\nTelegram: @Sha1oom`;
    
    alert(message);
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≥–æ—Å—Ç–µ–π
 * @param {string} action - –ù–∞–∑–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç-–ª–∏—Å—Ç–æ–≤")
 */
export function showGuestMessage(action) {
    const message = `${action} –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n\n–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º?\n\n–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç.`;
    
    if (confirm(message + '\n\n–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏?')) {
        // –í—ã—Ö–æ–¥–∏–º –∏–∑ –≥–æ—Å—Ç–µ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
        auth.signOut().then(() => {
            window.location.href = './public/login.html';
        }).catch((error) => {
            console.error('Error signing out guest:', error);
            window.location.href = './public/login.html';
        });
    }
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥–æ—Å—Ç—è –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
 */
export function showGuestProfileMessage() {
    const message = `–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –≥–æ—Å—Ç—å.\n\n–£ –≥–æ—Å—Ç–µ–π –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è.\n\n–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–∞–π—Ç–∞.`;
    
    if (confirm(message + '\n\n–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏?')) {
        // –í—ã—Ö–æ–¥–∏–º –∏–∑ –≥–æ—Å—Ç–µ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
        auth.signOut().then(() => {
            window.location.href = './public/login.html';
        }).catch((error) => {
            console.error('Error signing out guest:', error);
            window.location.href = './public/login.html';
        });
    }
}

// ====================================
// AUTH GATE
// ====================================

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
 * @param {Object} options - –û–ø—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @param {boolean} options.requireAuth - –¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
 * @param {boolean} options.requireBranch - –¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å –∫ —Ñ–∏–ª–∏–∞–ª—É
 * @param {boolean} options.requireAdmin - –¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ —Ä–æ–ª—å –∞–¥–º–∏–Ω–∞
 * @param {string} options.redirectTo - –ö—É–¥–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç—å –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–æ—Å—Ç—É–ø–∞
 */
export async function initAuthGate(options = {}) {
    const {
        requireAuth = true,
        requireBranch = false,
        requireAdmin = false,
        redirectTo = '/public/login.html'
    } = options;
    
    console.log('üîí Initializing auth gate...');
    console.log('Current path:', window.location.pathname);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
    if (sessionStorage.getItem('auth_redirecting') === 'true') {
        console.log('‚ö†Ô∏è Auth redirecting in progress, waiting...');
        sessionStorage.removeItem('auth_redirecting');
        // –î–∞–µ–º –≤—Ä–µ–º—è Firebase —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è
        await new Promise(resolve => setTimeout(resolve, 1000));
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞—â–∏—Ç—É –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
    if (window._authGateChecking) {
        console.log('‚ö†Ô∏è Auth gate already checking, skipping...');
        return false;
    }
    window._authGateChecking = true;
    
    try {
        const { user, isAuthenticated, isBanned } = await checkAuth();
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if (requireAuth && !isAuthenticated) {
            console.log('üö´ Authentication required, redirecting to login...');
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ª–æ–≥–∏–Ω–∞ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∞
            if (!window.location.pathname.includes('login')) {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º replace —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Ü–∏–∫–ª–∞ —á–µ—Ä–µ–∑ –∏—Å—Ç–æ—Ä–∏—é
                window.location.replace(redirectTo);
            }
            return false;
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–Ω–∞
        if (isBanned) {
            console.log('üö´ User is banned');
            showAuthMessage('–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
            return false;
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª–∏–∞–ª–∞
        if (requireBranch && user && !user.branchId) {
            console.log('‚ö†Ô∏è User not assigned to any branch');
            showAuthMessage('–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –µ—â–µ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Ñ–∏–ª–∏–∞–ª—É. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
            return false;
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤
        if (requireAdmin && user && user.role !== 'admin') {
            console.log('üö´ Admin access required');
            window.location.href = '/';
            return false;
        }
        
        console.log('‚úÖ Auth gate passed');
        window._authGateChecking = false;
        return true;
    } catch (error) {
        console.error('Auth gate error:', error);
        window._authGateChecking = false;
        if (requireAuth) {
            window.location.replace(redirectTo);
        }
        return false;
    }
}

// ====================================
// UI HELPERS
// ====================================

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 * @param {string} message
 */
function showAuthMessage(message) {
    // –°–æ–∑–¥–∞–µ–º overlay —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    const overlay = document.createElement('div');
    overlay.className = 'auth-message-overlay';
    overlay.innerHTML = `
        <div class="auth-message-card">
            <i class="fas fa-exclamation-circle"></i>
            <p>${message}</p>
            <button onclick="window.location.href='/public/login.html'">–í–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ</button>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
    if (!document.getElementById('auth-message-styles')) {
        const style = document.createElement('style');
        style.id = 'auth-message-styles';
        style.textContent = `
            .auth-message-overlay {
                position: fixed;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: rgba(0, 0, 0, 0.8);
                display: flex;
                align-items: center;
                justify-content: center;
                z-index: 10000;
            }
            .auth-message-card {
                background: var(--bg-secondary);
                padding: 40px;
                border-radius: 12px;
                text-align: center;
                max-width: 400px;
            }
            .auth-message-card i {
                font-size: 48px;
                color: var(--accent-warning);
                margin-bottom: 20px;
            }
            .auth-message-card p {
                margin: 0 0 30px;
                color: var(--text-primary);
                line-height: 1.5;
            }
            .auth-message-card button {
                background: var(--accent-primary);
                color: white;
                border: none;
                padding: 12px 30px;
                border-radius: 8px;
                font-size: 16px;
                cursor: pointer;
            }
        `;
        document.head.appendChild(style);
    }
    
    document.body.appendChild(overlay);
}

// ====================================
// LOGOUT FUNCTION
// ====================================

/**
 * –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
 */
export async function logout() {
    try {
        await auth.signOut();
        currentUser = null;
        window.location.href = '/public/login.html';
    } catch (error) {
        console.error('Logout error:', error);
    }
}