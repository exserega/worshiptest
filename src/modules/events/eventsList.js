/**
 * @fileoverview –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π
 * @module EventsList
 */

import logger from '../../utils/logger.js';
import { hasLimitedAccess } from '../auth/authCheck.js';

/**
 * –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–º —Å–æ–±—ã—Ç–∏–π
 */
export class EventsList {
    constructor(container) {
        this.container = container;
        this.events = [];
        this.currentFilter = 'upcoming'; // upcoming | archive | all
    }
    
    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
     * @param {Array} events - –ú–∞—Å—Å–∏–≤ —Å–æ–±—ã—Ç–∏–π
     */
    setEvents(events) {
        this.events = events;
        this.render();
    }
    
    /**
     * –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –ø–æ —Ç–∏–ø—É
     * @param {string} filter - –¢–∏–ø —Ñ–∏–ª—å—Ç—Ä–∞
     */
    filterEvents(filter) {
        this.currentFilter = filter;
        this.render();
    }
    
    /**
     * –†–∞–∑–¥–µ–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏—è –Ω–∞ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –∏ –∞—Ä—Ö–∏–≤–Ω—ã–µ
     * @returns {Object} –û–±—ä–µ–∫—Ç —Å –º–∞—Å—Å–∏–≤–∞–º–∏ upcoming –∏ archive
     */
    categorizeEvents() {
        const now = new Date();
        const upcoming = [];
        const archive = [];
        
        this.events.forEach(event => {
            const eventDate = event.date.toDate ? event.date.toDate() : new Date(event.date);
            if (eventDate >= now) {
                upcoming.push(event);
            } else {
                archive.push(event);
            }
        });
        
        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é, –∞—Ä—Ö–∏–≤ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
        upcoming.sort((a, b) => {
            const dateA = a.date.toDate ? a.date.toDate() : new Date(a.date);
            const dateB = b.date.toDate ? b.date.toDate() : new Date(b.date);
            return dateA - dateB;
        });
        
        archive.sort((a, b) => {
            const dateA = a.date.toDate ? a.date.toDate() : new Date(a.date);
            const dateB = b.date.toDate ? b.date.toDate() : new Date(b.date);
            return dateB - dateA;
        });
        
        return { upcoming, archive };
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è
     * @param {Date|Timestamp} date - –î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è
     * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞
     */
    formatEventDate(date) {
        const eventDate = date.toDate ? date.toDate() : new Date(date);
        const options = { 
            day: 'numeric', 
            month: 'long', 
            hour: '2-digit', 
            minute: '2-digit' 
        };
        return eventDate.toLocaleDateString('ru-RU', options);
    }
    
    /**
     * –°–æ–∑–¥–∞—Ç—å HTML –¥–ª—è –æ–¥–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
     * @param {Object} event - –î–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
     * @returns {string} HTML —Ä–∞–∑–º–µ—Ç–∫–∞
     */
    createEventItemHTML(event) {
        const date = this.formatEventDate(event.date);
        const songCount = event.songCount || 0;
        const leaderName = event.leaderName || '–Ω–µ —É–∫–∞–∑–∞–Ω';
        
        return `
            <div class="event-item" data-event-id="${event.id}">
                <div class="event-header">
                    <div class="event-date">üìÖ ${date}</div>
                    ${!hasLimitedAccess() && event.canEdit ? 
                        `<button class="event-edit-btn" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                            <i class="fas fa-edit"></i>
                        </button>` : ''
                    }
                </div>
                <div class="event-name">${event.name}</div>
                <div class="event-details">
                    <span class="event-leader">üé§ –õ–∏–¥–µ—Ä: ${leaderName}</span>
                    <span class="event-songs">üéµ ${songCount} –ø–µ—Å–µ–Ω</span>
                </div>
                ${event.comment ? 
                    `<div class="event-comment">üìù ${event.comment}</div>` : ''
                }
            </div>
        `;
    }
    
    /**
     * –û—Ç—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π
     */
    render() {
        if (this.events.length === 0) {
            this.container.innerHTML = `
                <div class="empty-events">
                    <p>–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π –≤ –≤–∞—à–µ–º —Ñ–∏–ª–∏–∞–ª–µ</p>
                    ${!hasLimitedAccess() ? 
                        '<button class="btn-create-event">–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ</button>' : ''
                    }
                </div>
            `;
            return;
        }
        
        const { upcoming, archive } = this.categorizeEvents();
        let html = '';
        
        // –§–∏–ª—å—Ç—Ä—ã
        html += `
            <div class="events-filters">
                <button class="filter-btn ${this.currentFilter === 'upcoming' ? 'active' : ''}" 
                        data-filter="upcoming">–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ</button>
                <button class="filter-btn ${this.currentFilter === 'all' ? 'active' : ''}" 
                        data-filter="all">–í—Å–µ</button>
                <button class="filter-btn ${this.currentFilter === 'archive' ? 'active' : ''}" 
                        data-filter="archive">–ê—Ä—Ö–∏–≤</button>
            </div>
        `;
        
        // –ö–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ–∏–ª—å—Ç—Ä–∞
        if (this.currentFilter === 'upcoming' || this.currentFilter === 'all') {
            if (upcoming.length > 0) {
                html += '<div class="events-section">';
                html += '<h3 class="events-section-title">–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è</h3>';
                html += '<div class="events-list">';
                upcoming.forEach(event => {
                    html += this.createEventItemHTML(event);
                });
                html += '</div></div>';
            }
        }
        
        if (this.currentFilter === 'archive' || this.currentFilter === 'all') {
            if (archive.length > 0) {
                html += '<div class="events-section">';
                html += '<h3 class="events-section-title">–ê—Ä—Ö–∏–≤ —Å–æ–±—ã—Ç–∏–π</h3>';
                html += '<div class="events-list">';
                archive.forEach(event => {
                    html += this.createEventItemHTML(event);
                });
                html += '</div></div>';
            }
        }
        
        // –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ–±—ã—Ç–∏–π –ø–æ —Ñ–∏–ª—å—Ç—Ä—É
        if ((this.currentFilter === 'upcoming' && upcoming.length === 0) ||
            (this.currentFilter === 'archive' && archive.length === 0)) {
            html += '<div class="empty-events"><p>–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</p></div>';
        }
        
        this.container.innerHTML = html;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        this.attachEventHandlers();
    }
    
    /**
     * –ü—Ä–∏–≤—è–∑–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
     */
    attachEventHandlers() {
        // –§–∏–ª—å—Ç—Ä—ã
        const filterButtons = this.container.querySelectorAll('.filter-btn');
        filterButtons.forEach(btn => {
            btn.addEventListener('click', () => {
                const filter = btn.dataset.filter;
                this.filterEvents(filter);
            });
        });
        
        // –ö–ª–∏–∫ –ø–æ —Å–æ–±—ã—Ç–∏—é
        const eventItems = this.container.querySelectorAll('.event-item');
        eventItems.forEach(item => {
            item.addEventListener('click', (e) => {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                if (e.target.closest('.event-edit-btn')) return;
                
                const eventId = item.dataset.eventId;
                this.onEventClick(eventId);
            });
        });
        
        // –ö–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        const editButtons = this.container.querySelectorAll('.event-edit-btn');
        editButtons.forEach(btn => {
            btn.addEventListener('click', (e) => {
                e.stopPropagation();
                const eventId = btn.closest('.event-item').dataset.eventId;
                this.onEventEdit(eventId);
            });
        });
        
        // –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
        const createBtn = this.container.querySelector('.btn-create-event');
        if (createBtn) {
            createBtn.addEventListener('click', () => {
                this.onCreateEvent();
            });
        }
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Å–æ–±—ã—Ç–∏—é (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∏–∑–≤–Ω–µ)
     * @param {string} eventId - ID —Å–æ–±—ã—Ç–∏—è
     */
    onEventClick(eventId) {
        logger.log(`–ö–ª–∏–∫ –ø–æ —Å–æ–±—ã—Ç–∏—é: ${eventId}`);
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∏–∑–≤–Ω–µ)
     * @param {string} eventId - ID —Å–æ–±—ã—Ç–∏—è
     */
    onEventEdit(eventId) {
        logger.log(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è: ${eventId}`);
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∏–∑–≤–Ω–µ)
     */
    onCreateEvent() {
        logger.log('–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è');
    }
}