/**
 * @fileoverview –û–≤–µ—Ä–ª–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π —Ñ–∏–ª–∏–∞–ª–∞
 * @module EventsOverlay
 */

import logger from '../../utils/logger.js';
import { EventsList } from './eventsList.js';
import { getEventsByBranch, deleteEvent, getEventById } from './eventsApi.js';
import { getCurrentUser } from '../auth/authCheck.js';
// –£–±–∏—Ä–∞–µ–º –∏–º–ø–æ—Ä—Ç CalendarView - –±—É–¥–µ–º –∑–∞–≥—Ä—É–∂–∞—Ç—å –ª–µ–Ω–∏–≤–æ

/**
 * –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–≤–µ—Ä–ª–µ–µ–º —Å–æ–±—ã—Ç–∏–π —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º
 */
class EventsOverlay {
    constructor() {
        logger.log('üéØ EventsOverlay: –Ω–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
        this.overlay = null;
        this.isOpen = false;
        this.events = [];
        this.eventsList = null;
        this.calendarView = null;
        this.viewMode = 'calendar'; // –ù–∞—á–∏–Ω–∞–µ–º —Å –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        this.currentBranchId = null;
        this.CalendarView = null; // –ö–ª–∞—Å—Å –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –ª–µ–Ω–∏–≤–æ
        
        console.log('‚úÖ EventsOverlay –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω'); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
        logger.log('‚úÖ EventsOverlay –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–≤–µ—Ä–ª–µ—è
     */
    init() {
        console.log('üéØ EventsOverlay: –Ω–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏'); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
        logger.log('üéØ EventsOverlay: –Ω–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
        this.createOverlayHTML();
        this.attachEventListeners();
        console.log('‚úÖ EventsOverlay –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω'); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
        logger.log('‚úÖ EventsOverlay –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ–≤–µ—Ä–ª–µ—è
     */
    createOverlayHTML() {
        const overlayHTML = `
            <div id="events-overlay" class="songs-overlay">
                <div class="songs-overlay-backdrop"></div>
                <div class="songs-overlay-content">
                    <!-- –®–∞–ø–∫–∞ -->
                    <div class="songs-overlay-header">
                        <h2 class="songs-overlay-title">–°–æ–±—ã—Ç–∏—è —Ñ–∏–ª–∏–∞–ª–∞</h2>
                        <button class="songs-overlay-close" aria-label="–ó–∞–∫—Ä—ã—Ç—å">
                            <span class="close-icon"></span>
                        </button>
                    </div>
                    
                    <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —Å–æ–±—ã—Ç–∏–π -->
                    <div class="events-content">
                        <!-- –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤–∏–¥–∞ (–≤—Ä–µ–º–µ–Ω–Ω—ã–π) -->
                        <div class="view-switcher" style="margin-bottom: 1rem; text-align: center; display: none;">
                            <button class="view-btn calendar-view-btn active">–ö–∞–ª–µ–Ω–¥–∞—Ä—å</button>
                            <button class="view-btn list-view-btn">–°–ø–∏—Å–æ–∫</button>
                        </div>
                        
                        <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è -->
                        <div class="events-calendar-container" style="display: block;">
                            <!-- –ö–∞–ª–µ–Ω–¥–∞—Ä—å –±—É–¥–µ—Ç –∑–¥–µ—Å—å -->
                        </div>
                        
                        <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–ø–∏—Å–∫–∞ -->
                        <div class="events-list-container" style="display: none;">
                            <!-- –°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π –±—É–¥–µ—Ç –∑–¥–µ—Å—å -->
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        document.body.insertAdjacentHTML('beforeend', overlayHTML);
        this.overlay = document.getElementById('events-overlay');
    }
    
    /**
     * –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    attachEventListeners() {
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –æ–≤–µ—Ä–ª–µ—è
        const closeBtn = this.overlay.querySelector('.songs-overlay-close');
        const backdrop = this.overlay.querySelector('.songs-overlay-backdrop');
        
        closeBtn.addEventListener('click', () => this.close());
        backdrop.addEventListener('click', () => this.close());
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
        this.escapeHandler = (e) => {
            if (e.key === 'Escape' && this.isOpen) {
                this.close();
            }
        };
    }
    
    /**
     * –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–±—ã—Ç–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∏–ª–∏–∞–ª–∞
     */
    async loadEvents() {
        console.log('üîÑ loadEvents: –Ω–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π'); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const currentUser = getCurrentUser();
            console.log('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', currentUser); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
            
            if (!currentUser) {
                console.warn('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
                logger.warn('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
                this.showEmptyState('–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
                return;
            }
            
            if (!currentUser.branchId) {
                console.warn('‚ö†Ô∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–∏–ª–∏–∞–ª'); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
                logger.warn('–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–∏–ª–∏–∞–ª');
                this.showEmptyState('–§–∏–ª–∏–∞–ª –Ω–µ –≤—ã–±—Ä–∞–Ω');
                return;
            }
            
            this.currentBranchId = currentUser.branchId;
            console.log(`üìÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ñ–∏–ª–∏–∞–ª–∞: ${this.currentBranchId}`); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
            logger.log(`–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ñ–∏–ª–∏–∞–ª–∞: ${this.currentBranchId}`);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            const contentEl = this.overlay.querySelector('.events-content');
            contentEl.innerHTML = '<div class="loading-indicator">–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π...</div>';
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–±—ã—Ç–∏—è
            console.log('üîç –í—ã–∑—ã–≤–∞–µ–º getEventsByBranch...'); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
            const events = await getEventsByBranch(this.currentBranchId);
            console.log('üìä –°–æ–±—ã—Ç–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', events); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
            
            // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
            this.events = events.map(event => {
                // –°–æ–∑–¥–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏—è, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –º–æ–≥—É—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                const canEdit = event.createdBy === currentUser.uid || 
                               currentUser.role === 'admin' || 
                               currentUser.role === 'moderator';
                console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤:', {
                    eventId: event.id,
                    eventCreatedBy: event.createdBy,
                    currentUserId: currentUser.uid,
                    currentUserRole: currentUser.role,
                    canEdit
                });
                return {
                    ...event,
                    canEdit
                };
            });
            
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–±—ã—Ç–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
            if (this.viewMode === 'calendar') {
                await this.showCalendarView();
            } else {
                this.showListView();
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π:', error); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
            logger.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π:', error);
            this.showEmptyState('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π');
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –ø—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ
     */
    showEmptyState(message) {
        const contentEl = this.overlay.querySelector('.events-content');
        contentEl.innerHTML = `
            <div class="empty-events">
                <p>${message}</p>
            </div>
        `;
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Å–æ–±—ã—Ç–∏—é
     * @param {string} eventId - ID —Å–æ–±—ã—Ç–∏—è
     */
    handleEventClick(eventId) {
        logger.log(`–û—Ç–∫—Ä—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è: ${eventId}`);
        // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–±—ã—Ç–∏—è
        window.location.href = `/public/event/?id=${eventId}`;
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
     */
    async handleCreateEvent() {
        console.log('üÜï –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è');
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–≤–µ—Ä–ª–µ–π —Å–æ–±—ã—Ç–∏–π –¥–ª—è –ª—É—á—à–µ–≥–æ UX
        this.close();
        
        try {
            const { getEventModal } = await import('./eventModal.js');
            const modal = getEventModal();
            
            modal.openForCreate(async (eventId) => {
                console.log('‚úÖ –°–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫');
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–≤–µ—Ä–ª–µ–π –æ–±—Ä–∞—Ç–Ω–æ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–±—ã—Ç–∏—è
                this.open();
                await this.loadEvents();
            });
            
            // –ü—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è - –æ—Ç–∫—Ä—ã–≤–∞–µ–º –æ–≤–µ—Ä–ª–µ–π –æ–±—Ä–∞—Ç–Ω–æ
            const originalClose = modal.close.bind(modal);
            modal.close = () => {
                originalClose();
                // –ï—Å–ª–∏ –æ–≤–µ—Ä–ª–µ–π –±—ã–ª –∑–∞–∫—Ä—ã—Ç, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ
                if (!this.isOpen) {
                    this.open();
                }
            };
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', error);
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è');
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Ç–æ–∂–µ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –æ–≤–µ—Ä–ª–µ–π –æ–±—Ä–∞—Ç–Ω–æ
            this.open();
        }
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
     * @param {string} eventId - ID —Å–æ–±—ã—Ç–∏—è
     * @param {string} eventName - –ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
     */
    async handleEventDelete(eventId, eventName) {
        console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:', eventId, eventName);
        
        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
        const confirmMessage = `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ "${eventName}"?\n\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.`;
        if (!confirm(confirmMessage)) {
            return;
        }
        
        try {
            // –£–¥–∞–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ
            await deleteEvent(eventId);
            console.log('‚úÖ –°–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ');
            
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π
            await this.loadEvents();
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è:', error);
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ: ' + error.message);
        }
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
     * @param {string} eventId - ID —Å–æ–±—ã—Ç–∏—è
     */
    async handleEventEdit(eventId) {
        logger.log(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è: ${eventId}`);
        
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
            const eventData = await getEventById(eventId);
            if (!eventData) {
                console.error('–°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
                return;
            }
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º overlay —Å–æ–±—ã—Ç–∏–π
            this.close();
            
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            const { eventModal } = await import('./eventModal.js');
            eventModal.open(eventData);
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º callback –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            eventModal.onSave = async () => {
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
                await this.loadEvents();
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º overlay —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∑–∞–∫—Ä—ã—Ç
                if (!this.isOpen) {
                    this.open();
                }
            };
            
            // –ü—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ overlay
            eventModal.onClose = () => {
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º overlay —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∑–∞–∫—Ä—ã—Ç
                if (!this.isOpen) {
                    this.open();
                }
            };
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è:', error);
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è');
        }
    }
    
    /**
     * –û—Ç–∫—Ä—ã—Ç–∏–µ –æ–≤–µ—Ä–ª–µ—è
     */
    open() {
        console.log('üìÇ EventsOverlay: –≤—ã–∑–≤–∞–Ω –º–µ—Ç–æ–¥ open()'); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
        logger.log('üìÇ EventsOverlay: –≤—ã–∑–≤–∞–Ω –º–µ—Ç–æ–¥ open()');
        
        if (!this.overlay) {
            console.error('‚ùå EventsOverlay: overlay —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!'); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
            logger.error('‚ùå EventsOverlay: overlay —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!');
            return;
        }
        
        this.overlay.classList.add('visible');
        this.isOpen = true;
        document.addEventListener('keydown', this.escapeHandler);
        console.log('‚úÖ EventsOverlay –æ—Ç–∫—Ä—ã—Ç'); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
        logger.log('‚úÖ EventsOverlay –æ—Ç–∫—Ä—ã—Ç');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
        this.loadEvents();
    }
    
    /**
     * –ó–∞–∫—Ä—ã—Ç–∏–µ –æ–≤–µ—Ä–ª–µ—è
     */
    close() {
        if (!this.overlay) return;
        
        this.overlay.classList.remove('visible');
        this.isOpen = false;
        document.removeEventListener('keydown', this.escapeHandler);
        logger.log('EventsOverlay –∑–∞–∫—Ä—ã—Ç');
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–π –≤–∏–¥
     */
    async showCalendarView() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ overlay
        if (!this.overlay) {
            logger.error('‚ùå Overlay –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å');
            return;
        }
        
        const calendarContainer = this.overlay.querySelector('.events-calendar-container');
        const listContainer = this.overlay.querySelector('.events-list-container');
        
        if (!calendarContainer || !listContainer) {
            logger.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è/—Å–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å, —Å–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
        calendarContainer.style.display = 'block';
        listContainer.style.display = 'none';
        
        // –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        if (!this.CalendarView) {
            try {
                logger.log('üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å –∫–∞–ª–µ–Ω–¥–∞—Ä—è...');
                const module = await import('./calendarView.js');
                this.CalendarView = module.CalendarView;
                logger.log('‚úÖ –ú–æ–¥—É–ª—å –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞–≥—Ä—É–∂–µ–Ω');
            } catch (error) {
                logger.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', error);
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–∫ fallback
                this.viewMode = 'list';
                this.showListView();
                return;
            }
        }
        
        // –°–æ–∑–¥–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω
        if (!this.calendarView && this.CalendarView) {
            this.calendarView = new this.CalendarView(calendarContainer);
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –¥–Ω—é
            this.calendarView.onDayClick = (date, events) => {
                logger.log(`üìÖ –ö–ª–∏–∫ –ø–æ –¥–Ω—é: ${date.toLocaleDateString()}, —Å–æ–±—ã—Ç–∏–π: ${events.length}`);
                // –í —Å–ª–µ–¥—É—é—â–∏—Ö —ç—Ç–∞–ø–∞—Ö –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è/–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–±—ã—Ç–∏–π
            };
        }
        
        // –ü–µ—Ä–µ–¥–∞–µ–º —Å–æ–±—ã—Ç–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        if (this.calendarView) {
            this.calendarView.setEvents(this.events);
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –≤–∏–¥ —Å–ø–∏—Å–∫–∞  
     */
    showListView() {
        const calendarContainer = this.overlay.querySelector('.events-calendar-container');
        const listContainer = this.overlay.querySelector('.events-list-container');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫, —Å–∫—Ä—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        calendarContainer.style.display = 'none';
        listContainer.style.display = 'block';
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω
        if (!this.eventsList) {
            this.eventsList = new EventsList(listContainer);
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            this.eventsList.onEventClick = (eventId) => {
                this.handleEventClick(eventId);
            };
            
            this.eventsList.onEventEdit = (eventId) => {
                this.handleEventEdit(eventId);
            };
            
            this.eventsList.onEventCreate = () => {
                this.handleEventCreate();
            };
            
            this.eventsList.onEventDelete = (eventId, eventName) => {
                this.handleEventDelete(eventId, eventName);
            };
        }
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–±—ã—Ç–∏—è
        this.eventsList.setEvents(this.events);
    }
}

// –°–æ–∑–¥–∞–µ–º –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
let eventsOverlayInstance = null;

export function initEventsOverlay() {
    if (!eventsOverlayInstance) {
        eventsOverlayInstance = new EventsOverlay();
    }
    return eventsOverlayInstance;
}

export function openEventsOverlay() {
    console.log('üöÄ openEventsOverlay –≤—ã–∑–≤–∞–Ω–∞'); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    logger.log('üöÄ openEventsOverlay –≤—ã–∑–≤–∞–Ω–∞');
    
    if (!eventsOverlayInstance) {
        console.log('üì¶ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä EventsOverlay'); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
        logger.log('üì¶ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä EventsOverlay');
        initEventsOverlay();
    }
    
    console.log('üìû –í—ã–∑—ã–≤–∞–µ–º open() –Ω–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–µ:', eventsOverlayInstance); // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ª–æ–≥
    eventsOverlayInstance.open();
}

export function closeEventsOverlay() {
    if (eventsOverlayInstance) {
        eventsOverlayInstance.close();
    }
}