/**
 * @fileoverview –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ç-–ª–∏—Å—Ç–∞ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
 * @module DatePickerModal
 */

import logger from '../../utils/logger.js';

/**
 * –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
 */
class DatePickerModal {
    constructor() {
        this.modal = null;
        this.onDateSelected = null;
        this.setlistData = null;
        this.selectedDate = null;
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    init() {
        this.createModal();
        this.attachEventListeners();
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    createModal() {
        const modalHTML = `
            <div id="date-picker-modal" class="modal-overlay" style="display: none;">
                <div class="modal-content compact date-picker-modal">
                    <div class="modal-header">
                        <h3>–î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ç-–ª–∏—Å—Ç –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å</h3>
                        <button class="close-btn" aria-label="–ó–∞–∫—Ä—ã—Ç—å">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    
                    <div class="modal-body">
                        <div class="setlist-info">
                            <i class="fas fa-music"></i>
                            <div class="info-content">
                                <span class="setlist-name-label">–°–µ—Ç-–ª–∏—Å—Ç:</span>
                                <span id="modal-setlist-name" class="setlist-name"></span>
                            </div>
                        </div>
                        
                        <div class="date-selection">
                            <label for="event-date-input" class="date-label">
                                <i class="fas fa-calendar"></i>
                                –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:
                            </label>
                            <input 
                                type="date" 
                                id="event-date-input" 
                                class="form-control date-input"
                                min="${this.getTodayDate()}"
                            >
                        </div>
                        
                        <div class="quick-dates">
                            <button class="quick-date-btn" data-days="0">–°–µ–≥–æ–¥–Ω—è</button>
                            <button class="quick-date-btn" data-days="1">–ó–∞–≤—Ç—Ä–∞</button>
                            <button class="quick-date-btn" data-days="7">–ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é</button>
                        </div>
                    </div>
                    
                    <div class="modal-footer">
                        <button class="btn-secondary cancel-btn">–û—Ç–º–µ–Ω–∞</button>
                        <button class="btn-primary continue-btn" disabled>–î–∞–ª–µ–µ</button>
                    </div>
                </div>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ DOM
        document.body.insertAdjacentHTML('beforeend', modalHTML);
        this.modal = document.getElementById('date-picker-modal');
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
     */
    getTodayDate() {
        const today = new Date();
        return today.toISOString().split('T')[0];
    }
    
    /**
     * –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    attachEventListeners() {
        const modal = this.modal;
        const closeBtn = modal.querySelector('.close-btn');
        const cancelBtn = modal.querySelector('.cancel-btn');
        const continueBtn = modal.querySelector('.continue-btn');
        const dateInput = modal.querySelector('#event-date-input');
        const overlay = modal;
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        closeBtn.addEventListener('click', () => this.close());
        cancelBtn.addEventListener('click', () => this.close());
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –æ–≤–µ—Ä–ª–µ–π
        overlay.addEventListener('click', (e) => {
            if (e.target === overlay) {
                this.close();
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞—Ç—ã
        dateInput.addEventListener('change', (e) => {
            this.selectedDate = e.target.value;
            continueBtn.disabled = !this.selectedDate;
        });
        
        // –ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ"
        continueBtn.addEventListener('click', () => {
            if (this.selectedDate && this.onDateSelected) {
                this.onDateSelected(this.selectedDate, this.setlistData);
                this.close();
            }
        });
        
        // –ë—ã—Å—Ç—Ä—ã–π –≤—ã–±–æ—Ä –¥–∞—Ç—ã
        const quickDateBtns = modal.querySelectorAll('.quick-date-btn');
        quickDateBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                const daysToAdd = parseInt(btn.dataset.days);
                const date = new Date();
                date.setDate(date.getDate() + daysToAdd);
                
                dateInput.value = date.toISOString().split('T')[0];
                dateInput.dispatchEvent(new Event('change'));
            });
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
        this.escapeHandler = (e) => {
            if (e.key === 'Escape') {
                this.close();
            }
        };
    }
    
    /**
     * –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
     * @param {Object} setlistData - –î–∞–Ω–Ω—ã–µ —Å–µ—Ç-–ª–∏—Å—Ç–∞
     * @param {Function} onDateSelected - Callback –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–∞—Ç—ã
     */
    open(setlistData, onDateSelected) {
        this.setlistData = setlistData;
        this.onDateSelected = onDateSelected;
        this.selectedDate = null;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ç-–ª–∏—Å—Ç–∞
        const setlistNameEl = this.modal.querySelector('#modal-setlist-name');
        if (setlistNameEl) {
            setlistNameEl.textContent = setlistData.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–ª—è
        const dateInput = this.modal.querySelector('#event-date-input');
        const continueBtn = this.modal.querySelector('.continue-btn');
        
        dateInput.value = '';
        continueBtn.disabled = true;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.modal.style.display = 'flex';
        document.addEventListener('keydown', this.escapeHandler);
        
        // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –¥–∞—Ç—ã
        setTimeout(() => dateInput.focus(), 100);
        
        logger.log('üìÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –æ—Ç–∫—Ä—ã—Ç–æ –¥–ª—è —Å–µ—Ç-–ª–∏—Å—Ç–∞:', setlistData.name);
    }
    
    /**
     * –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
     */
    close() {
        this.modal.style.display = 'none';
        document.removeEventListener('keydown', this.escapeHandler);
        
        // –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        this.setlistData = null;
        this.onDateSelected = null;
        this.selectedDate = null;
        
        logger.log('üìÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –∑–∞–∫—Ä—ã—Ç–æ');
    }
}

// –°–æ–∑–¥–∞–µ–º –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
let datePickerInstance = null;

/**
 * –ü–æ–ª—É—á–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
 * @returns {DatePickerModal}
 */
export function getDatePickerModal() {
    if (!datePickerInstance) {
        datePickerInstance = new DatePickerModal();
        datePickerInstance.init();
    }
    return datePickerInstance;
}