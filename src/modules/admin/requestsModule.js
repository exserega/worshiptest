/**
 * Requests Module - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ
 */

// ====================================
// –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –ó–ê–Ø–í–û–ö
// ====================================

/**
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫
 */
export function displayRequests() {
    const container = document.getElementById('requests-list');
    if (!container) return;
    
    const { requests, branches } = window.adminState;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞—è–≤–æ–∫
    updateRequestsCount(requests.length);
    
    if (!requests || requests.length === 0) {
        container.innerHTML = `
            <div class="empty-state">
                <i class="fas fa-user-check"></i>
                <p>–ù–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫</p>
            </div>
        `;
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞—è–≤–æ–∫
    const html = requests.map(user => createRequestCard(user, branches)).join('');
    container.innerHTML = html;
    
    // –û—Ç–ª–∞–¥–∫–∞: –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ —Å—Ç–∏–ª–∏
    console.log('üìã Requests rendered:', requests.length);
    const firstCard = container.querySelector('.request-card');
    if (firstCard) {
        const computedStyle = window.getComputedStyle(firstCard);
        console.log('Card background:', computedStyle.backgroundColor);
        console.log('Card padding:', computedStyle.padding);
    }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É –∑–∞—è–≤–∫–∏
 */
function createRequestCard(user, branches) {
    const branch = branches.find(b => b.id === user.branchId);
    const branchName = branch ? branch.name : '–§–∏–ª–∏–∞–ª –Ω–µ —É–∫–∞–∑–∞–Ω';
    
    return `
        <div class="request-card" data-user-id="${user.id}" style="background: white; border: 1px solid #e5e5e5; border-radius: 12px; padding: 24px; margin-bottom: 16px; box-shadow: 0 2px 8px rgba(0,0,0,0.08);">
            <div class="request-header" style="display: flex; justify-content: space-between; margin-bottom: 20px; padding-bottom: 16px; border-bottom: 1px solid #f0f0f0;">
                <h3 style="margin: 0; color: #2c3e50; font-size: 20px;">${user.name || '–ë–µ–∑ –∏–º–µ–Ω–∏'}</h3>
                <span class="request-date" style="font-size: 13px; color: #999; background: #f5f5f5; padding: 4px 12px; border-radius: 20px;">${formatDate(user.createdAt)}</span>
            </div>
            
            <div class="request-info" style="margin-bottom: 24px;">
                <div class="info-row" style="display: flex; align-items: center; gap: 12px; margin-bottom: 12px; color: #555;">
                    <i class="fas fa-envelope" style="width: 20px; text-align: center; color: #ff9800;"></i>
                    <span>${user.email}</span>
                </div>
                <div class="info-row" style="display: flex; align-items: center; gap: 12px; margin-bottom: 12px; color: #555;">
                    <i class="fas fa-phone" style="width: 20px; text-align: center; color: #ff9800;"></i>
                    <span>${user.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                </div>
                <div class="info-row" style="display: flex; align-items: center; gap: 12px; margin-bottom: 12px; color: #555;">
                    <i class="fas fa-building" style="width: 20px; text-align: center; color: #ff9800;"></i>
                    <span>${branchName}</span>
                </div>
            </div>
            
            <div class="request-actions" style="display: flex; gap: 12px; margin-top: 20px; padding-top: 20px; border-top: 1px solid #f0f0f0;">
                <button class="btn-action success" 
                        onclick="window.adminRequests.approveRequest('${user.id}')"
                        title="–û–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫—É"
                        style="flex: 1; display: flex; align-items: center; justify-content: center; gap: 8px; padding: 10px 20px; background: #4CAF50; color: white; border: none; border-radius: 8px; font-weight: 500; font-size: 14px; cursor: pointer;">
                    <i class="fas fa-check"></i>
                    –û–¥–æ–±—Ä–∏—Ç—å
                </button>
                <button class="btn-action danger" 
                        onclick="window.adminRequests.rejectRequest('${user.id}')"
                        title="–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É"
                        style="flex: 1; display: flex; align-items: center; justify-content: center; gap: 8px; padding: 10px 20px; background: white; color: #f44336; border: 1px solid #f44336; border-radius: 8px; font-weight: 500; font-size: 14px; cursor: pointer;">
                    <i class="fas fa-times"></i>
                    –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                </button>
            </div>
        </div>
    `;
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—á–µ—Ç—á–∏–∫ –∑–∞—è–≤–æ–∫
 */
function updateRequestsCount(count) {
    const badge = document.getElementById('requests-count');
    if (badge) {
        if (count > 0) {
            badge.textContent = count;
            badge.style.display = 'inline-block';
        } else {
            badge.style.display = 'none';
        }
    }
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É
 */
function formatDate(date) {
    if (!date) return '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞';
    
    const d = date.toDate ? date.toDate() : new Date(date);
    const now = new Date();
    const diff = now - d;
    const days = Math.floor(diff / (1000 * 60 * 60 * 24));
    
    if (days === 0) return '–°–µ–≥–æ–¥–Ω—è';
    if (days === 1) return '–í—á–µ—Ä–∞';
    if (days < 7) return `${days} –¥–Ω–µ–π –Ω–∞–∑–∞–¥`;
    
    return d.toLocaleDateString('ru-RU');
}

// ====================================
// –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–Ø–í–û–ö
// ====================================

/**
 * –û–¥–æ–±—Ä—è–µ—Ç –∑–∞—è–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export async function approveRequest(userId) {
    if (!confirm('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞—è–≤–∫—É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?')) return;
    
    try {
        showRequestLoading(userId);
        
        const db = firebase.firestore();
        console.log('Current user:', window.adminState.currentUser);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ active
        await db.collection('users').doc(userId).update({
            status: 'active',
            approvedAt: firebase.firestore.FieldValue.serverTimestamp(),
            approvedBy: window.adminState.currentUser?.id || window.adminState.currentUser?.uid
        });
        
        // –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫
        window.adminState.requests = window.adminState.requests.filter(u => u.id !== userId);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ - –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ
        const userDoc = await db.collection('users').doc(userId).get();
        if (userDoc.exists) {
            const updatedUser = { id: userDoc.id, ...userDoc.data() };
            const userIndex = window.adminState.users.findIndex(u => u.id === userId);
            if (userIndex !== -1) {
                window.adminState.users[userIndex] = updatedUser;
            }
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        displayRequests();
        
        // –ï—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç —Ç–∞–± –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Ç–æ–∂–µ
        if (window.adminState.currentTab === 'users') {
            const { displayUsers } = await import('./usersModule.js');
            await displayUsers();
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
            window.dispatchEvent(new Event('admin-data-updated'));
        }
        
        showSuccess('–ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞');
        
    } catch (error) {
        console.error('Error approving request:', error);
        showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏');
        hideRequestLoading(userId);
    }
}

/**
 * –û—Ç–∫–ª–æ–Ω—è–µ—Ç –∑–∞—è–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export async function rejectRequest(userId) {
    const reason = prompt('–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):');
    
    if (reason === null) return; // –û—Ç–º–µ–Ω–∏–ª–∏ –¥–∏–∞–ª–æ–≥
    
    try {
        showRequestLoading(userId);
        
        const db = firebase.firestore();
        console.log('Current user:', window.adminState.currentUser);
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª–∏–∞–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = window.adminState.requests.find(u => u.id === userId);
        const branch = window.adminState.branches.find(b => b.id === user?.branchId);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å pending
        await db.collection('users').doc(userId).update({
            // status –æ—Å—Ç–∞–µ—Ç—Å—è 'pending'
            rejectedAt: firebase.firestore.FieldValue.serverTimestamp(),
            rejectedBy: window.adminState.currentUser?.id || window.adminState.currentUser?.uid,
            rejectionReason: reason || '–ë–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã',
            branchName: branch?.name || '–§–∏–ª–∏–∞–ª –Ω–µ —É–∫–∞–∑–∞–Ω',
            hasRejection: true
        });
        
        // –ù–ï —É–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫ - –æ–Ω –æ—Å—Ç–∞–µ—Ç—Å—è –≤ pending
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ
        const userDoc = await db.collection('users').doc(userId).get();
        if (userDoc.exists) {
            const updatedUser = { id: userDoc.id, ...userDoc.data() };
            const userIndex = window.adminState.users.findIndex(u => u.id === userId);
            if (userIndex !== -1) {
                window.adminState.users[userIndex] = updatedUser;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–∫–∂–µ –≤ —Å–ø–∏—Å–∫–µ –∑–∞—è–≤–æ–∫
            const requestIndex = window.adminState.requests.findIndex(u => u.id === userId);
            if (requestIndex !== -1) {
                window.adminState.requests[requestIndex] = updatedUser;
            }
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        displayRequests();
        
        // –ï—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç —Ç–∞–± –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Ç–æ–∂–µ
        if (window.adminState.currentTab === 'users') {
            const { displayUsers } = await import('./usersModule.js');
            await displayUsers();
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
            window.dispatchEvent(new Event('admin-data-updated'));
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –≤—Ö–æ–¥–µ
        showSuccess('–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –≤—Ö–æ–¥–µ.');
        
    } catch (error) {
        console.error('Error rejecting request:', error);
        showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏');
        hideRequestLoading(userId);
    }
}

// ====================================
// UI –£–¢–ò–õ–ò–¢–´
// ====================================

function showRequestLoading(userId) {
    const card = document.querySelector(`[data-user-id="${userId}"]`);
    if (card) {
        card.classList.add('loading');
        card.querySelectorAll('button').forEach(btn => btn.disabled = true);
    }
}

function hideRequestLoading(userId) {
    const card = document.querySelector(`[data-user-id="${userId}"]`);
    if (card) {
        card.classList.remove('loading');
        card.querySelectorAll('button').forEach(btn => btn.disabled = false);
    }
}

function showSuccess(message) {
    // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å toast –∏–ª–∏ –¥—Ä—É–≥–æ–π UI —ç–ª–µ–º–µ–Ω—Ç
    console.log('‚úÖ', message);
}

function showError(message) {
    // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å toast –∏–ª–∏ –¥—Ä—É–≥–æ–π UI —ç–ª–µ–º–µ–Ω—Ç
    console.error('‚ùå', message);
}

// ====================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
// ====================================

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è onclick –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
window.adminRequests = {
    approveRequest,
    rejectRequest
};