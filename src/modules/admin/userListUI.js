/**
 * User List UI Module
 * –ú–æ–¥—É–ª—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * 
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞:
 * - –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * - –û–±—Ä–∞–±–æ—Ç–∫—É UI —Å–æ–±—ã—Ç–∏–π
 */

import { getFilteredUsers, getUserStats } from './userManagement.js';

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã –±—É–¥—É—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
let elements = {};

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –º–æ–¥—É–ª—è
 */
export function initUserListUI(containerElement) {
    console.log('üé® Initializing user list UI...');
    
    elements.container = containerElement;
    
    // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É UI
    createUIStructure();
    
    return elements;
}

/**
 * –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É UI
 */
function createUIStructure() {
    elements.container.innerHTML = `
        <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π -->
        <div class="user-stats-bar">
            <div class="stat-item">
                <span class="stat-value" id="stat-total">0</span>
                <span class="stat-label">–í—Å–µ–≥–æ</span>
            </div>
            <div class="stat-item">
                <span class="stat-value active" id="stat-active">0</span>
                <span class="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö</span>
            </div>
            <div class="stat-item">
                <span class="stat-value pending" id="stat-pending">0</span>
                <span class="stat-label">–û–∂–∏–¥–∞—é—Ç</span>
            </div>
            <div class="stat-item">
                <span class="stat-value admin" id="stat-admins">0</span>
                <span class="stat-label">–ê–¥–º–∏–Ω–æ–≤</span>
            </div>
        </div>
        
        <!-- –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ -->
        <div class="user-filters-bar">
            <div class="search-box">
                <i class="fas fa-search"></i>
                <input type="text" 
                       id="user-search" 
                       placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏, email –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω—É..."
                       class="search-input">
            </div>
            
            <div class="filter-group">
                <select id="filter-branch" class="filter-select">
                    <option value="">–í—Å–µ —Ñ–∏–ª–∏–∞–ª—ã</option>
                </select>
                
                <select id="filter-role" class="filter-select">
                    <option value="">–í—Å–µ —Ä–æ–ª–∏</option>
                    <option value="admin">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã</option>
                    <option value="user">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</option>
                </select>
                
                <select id="filter-status" class="filter-select">
                    <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                    <option value="pending">–û–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</option>
                    <option value="active">–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
                    <option value="blocked">–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã</option>
                </select>
            </div>
            
            <div class="action-buttons">
                <button class="btn-icon" id="refresh-users" title="–û–±–Ω–æ–≤–∏—Ç—å">
                    <i class="fas fa-sync"></i>
                </button>
                <button class="btn-icon" id="export-users" title="–≠–∫—Å–ø–æ—Ä—Ç –≤ CSV">
                    <i class="fas fa-download"></i>
                </button>
            </div>
        </div>
        
        <!-- –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π -->
        <div class="users-table-container">
            <table class="users-table">
                <thead>
                    <tr>
                        <th class="sortable" data-sort="name">
                            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <i class="fas fa-sort"></i>
                        </th>
                        <th class="sortable" data-sort="role">
                            –†–æ–ª—å <i class="fas fa-sort"></i>
                        </th>
                        <th class="sortable" data-sort="status">
                            –°—Ç–∞—Ç—É—Å <i class="fas fa-sort"></i>
                        </th>
                        <th class="sortable" data-sort="branchId">
                            –§–∏–ª–∏–∞–ª <i class="fas fa-sort"></i>
                        </th>
                        <th class="sortable" data-sort="createdAt">
                            –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è <i class="fas fa-sort"></i>
                        </th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody id="users-table-body">
                    <tr>
                        <td colspan="6" class="loading-message">
                            <i class="fas fa-spinner fa-spin"></i> –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        
        <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –º–∞—Å—Å–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π -->
        <div id="bulk-actions-modal" class="modal" style="display: none;">
            <div class="modal-content">
                <span class="close-modal">&times;</span>
                <h3>–ú–∞—Å—Å–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
                <div class="bulk-actions-content">
                    <p>–í—ã–±—Ä–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <span id="selected-count">0</span></p>
                    <div class="bulk-actions-buttons">
                        <button class="btn-primary" id="bulk-activate">
                            <i class="fas fa-check"></i> –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                        <button class="btn-secondary" id="bulk-assign-branch">
                            <i class="fas fa-building"></i> –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ñ–∏–ª–∏–∞–ª
                        </button>
                        <button class="btn-danger" id="bulk-ban">
                            <i class="fas fa-ban"></i> –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã
    elements.statsBar = elements.container.querySelector('.user-stats-bar');
    elements.searchInput = elements.container.querySelector('#user-search');
    elements.filtersBar = elements.container.querySelector('.user-filters-bar');
    elements.tableBody = elements.container.querySelector('#users-table-body');
    elements.branchFilter = elements.container.querySelector('#filter-branch');
    elements.roleFilter = elements.container.querySelector('#filter-role');
    elements.statusFilter = elements.container.querySelector('#filter-status');
}

/**
 * –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
 */
export function updateStats() {
    const stats = getUserStats();
    
    document.getElementById('stat-total').textContent = stats.total;
    document.getElementById('stat-active').textContent = stats.active;
    document.getElementById('stat-pending').textContent = stats.pending;
    document.getElementById('stat-admins').textContent = stats.admins;
}

/**
 * –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª–∏–∞–ª–æ–≤ –≤ —Ñ–∏–ª—å—Ç—Ä–µ
 */
export function updateBranchFilter(branches) {
    elements.branchFilter.innerHTML = '<option value="">–í—Å–µ —Ñ–∏–ª–∏–∞–ª—ã</option>';
    
    branches.forEach(branch => {
        const option = document.createElement('option');
        option.value = branch.id;
        option.textContent = branch.name;
        elements.branchFilter.appendChild(option);
    });
}

/**
 * –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ
 */
export function renderUsers(branches = []) {
    const users = getFilteredUsers();
    
    if (users.length === 0) {
        elements.tableBody.innerHTML = `
            <tr>
                <td colspan="6" class="empty-message">
                    <i class="fas fa-users-slash"></i>
                    <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
                </td>
            </tr>
        `;
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º map —Ñ–∏–ª–∏–∞–ª–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    const branchMap = {};
    branches.forEach(b => branchMap[b.id] = b);
    
    elements.tableBody.innerHTML = users.map(user => {
        const branch = branchMap[user.branchId];
        const isCurrentUser = user.id === firebase.auth().currentUser?.uid;
        
        return `
            <tr class="user-row ${isCurrentUser ? 'current-user' : ''}" data-user-id="${user.id}">
                <td class="user-info">
                    <div class="user-avatar">
                        <i class="fas fa-user-circle"></i>
                    </div>
                    <div class="user-details">
                        <div class="user-name">${user.name || '–ë–µ–∑ –∏–º–µ–Ω–∏'}</div>
                        <div class="user-contact">${user.email || user.phone || ''}</div>
                    </div>
                </td>
                <td>
                    <span class="role-badge ${user.role}">
                        ${user.role === 'admin' ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                    </span>
                </td>
                <td>
                    <span class="status-badge ${user.status}">
                        ${getStatusText(user.status)}
                    </span>
                </td>
                <td>
                    ${branch ? branch.name : '<span class="text-muted">–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω</span>'}
                </td>
                <td class="date-cell">
                    ${formatDate(user.createdAt)}
                </td>
                <td class="actions-cell">
                    <div class="action-buttons">
                        ${renderUserActions(user, isCurrentUser)}
                    </div>
                </td>
            </tr>
        `;
    }).join('');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    updateStats();
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
 */
function getStatusText(status) {
    const statusMap = {
        'active': '–ê–∫—Ç–∏–≤–µ–Ω',
        'pending': '–û–∂–∏–¥–∞–µ—Ç',
        'banned': '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'
    };
    return statusMap[status] || status;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—É
 */
function formatDate(date) {
    if (!date) return '-';
    
    const options = {
        day: 'numeric',
        month: 'short',
        year: 'numeric'
    };
    
    return new Intl.DateTimeFormat('ru', options).format(date);
}

/**
 * –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function renderUserActions(user, isCurrentUser) {
    if (isCurrentUser) {
        return `<span class="text-muted">–≠—Ç–æ –≤—ã</span>`;
    }
    
    const actions = [];
    
    // –ö–Ω–æ–ø–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏
    if (user.role === 'user') {
        actions.push(`
            <button class="btn-action" 
                    onclick="window.adminUI.handleRoleChange('${user.id}', 'admin')"
                    title="–°–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º">
                <i class="fas fa-user-shield"></i>
            </button>
        `);
    } else {
        actions.push(`
            <button class="btn-action" 
                    onclick="window.adminUI.handleRoleChange('${user.id}', 'user')"
                    title="–°–¥–µ–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º">
                <i class="fas fa-user"></i>
            </button>
        `);
    }
    
    // –ö–Ω–æ–ø–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    if (user.status === 'pending') {
        actions.push(`
            <button class="btn-action success" 
                    onclick="window.adminUI.handleStatusChange('${user.id}', 'active')"
                    title="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å">
                <i class="fas fa-check"></i>
            </button>
        `);
    } else if (user.status === 'active') {
        actions.push(`
            <button class="btn-action danger" 
                    onclick="window.adminUI.handleStatusChange('${user.id}', 'banned')"
                    title="–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å">
                <i class="fas fa-ban"></i>
            </button>
        `);
    } else {
        actions.push(`
            <button class="btn-action warning" 
                    onclick="window.adminUI.handleStatusChange('${user.id}', 'active')"
                    title="–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å">
                <i class="fas fa-unlock"></i>
            </button>
        `);
    }
    
    // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª–∏–∞–ª–∞
    actions.push(`
        <button class="btn-action" 
                onclick="window.adminUI.handleBranchAssign('${user.id}')"
                title="–ù–∞–∑–Ω–∞—á–∏—Ç—å —Ñ–∏–ª–∏–∞–ª">
            <i class="fas fa-building"></i>
        </button>
    `);
    
    // –ö–Ω–æ–ø–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    actions.push(`
        <button class="btn-action" 
                onclick="window.adminUI.showUserDetails('${user.id}')"
                title="–ü–æ–¥—Ä–æ–±–Ω–µ–µ">
            <i class="fas fa-ellipsis-v"></i>
        </button>
    `);
    
    return actions.join('');
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
 */
export function showError(message) {
    elements.tableBody.innerHTML = `
        <tr>
            <td colspan="6" class="error-message">
                <i class="fas fa-exclamation-triangle"></i>
                <p>${message}</p>
            </td>
        </tr>
    `;
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
 */
export function showLoading() {
    elements.tableBody.innerHTML = `
        <tr>
            <td colspan="6" class="loading-message">
                <i class="fas fa-spinner fa-spin"></i> –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...
            </td>
        </tr>
    `;
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
export default {
    initUserListUI,
    updateStats,
    updateBranchFilter,
    renderUsers,
    showError,
    showLoading
};